{"version":3,"sources":["components/Person.js","services/contacts.js","components/Notification.js","components/App.js","index.js"],"names":["Person","person","removeEvent","name","number","onClick","PersonsData","persons","map","key","baseUrl","axios","get","then","response","data","newPerson","post","id","put","delete","Notification","message","type","className","FilterData","filter","handleFilter","value","onChange","PersonForm","handleNewPerson","handleNewName","handleNewNumber","newName","newNumber","onSubmit","App","useState","setPersons","setNewName","setNewNumber","filterData","setFilterData","errorMsg","setErrorMsg","alertMsg","setAlertMsg","useEffect","contactService","initialPersons","notify","msg","setTimeout","personsToShow","toLowerCase","includes","event","target","preventDefault","findIndex","returnedPerson","console","log","concat","catch","error","window","confirm","updatePerson","find","p","err","removePerson","res","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7eb4aadf.chunk.js","sourcesContent":["import React from 'react'\n\nconst Person = ({ person, removeEvent }) => {      \n    return (\n      <div>\n        <span>\n          {person.name}\n        </span>\n        &nbsp; \n        <span>\n          {person.number}\n        </span>\n        &nbsp;\n        <button onClick={removeEvent}>delete</button>\n      </div>\n    )\n  }\n  \nconst PersonsData = ({ persons, removeEvent }) => {\n    return (\n      <div>\n        {persons.map(person => \n          <Person key={person.name} person={person} removeEvent={() => removeEvent(person)} />  \n        )}\n      </div>\n    )\n}\n\nexport default PersonsData\n","import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    return axios.get(baseUrl).then(response => response.data)\n}\n\nconst create = newPerson => {\n    return axios.post(baseUrl, newPerson).then(response => response.data)\n}\n\nconst update = (id, newPerson) => {\n    return axios.put(`${baseUrl}/${id}`, newPerson).then(response => response.data)\n}\n\nconst remove = (id) => {\n    return axios.delete(`${baseUrl}/${id}`).then(response => response.data)\n}\n\nexport default { getAll, create, update, remove }","import React from 'react'\n\nconst Notification = ({ message, type }) => {\n    if (message === null) {\n        return null\n    }\n\n    return (\n        <div className={type}>\n            {message}\n        </div>\n    )\n}\n\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport PersonsData from './Person.js'\nimport contactService from '../services/contacts.js'\nimport Notification from './Notification.js'\n\nconst FilterData = ({ filter, handleFilter }) => {\n  return (\n    <div>\n      filter shown with: <input value={filter} onChange={handleFilter} />\n    </div>\n  )\n}\n\nconst PersonForm = ({handleNewPerson, handleNewName, handleNewNumber, newName, newNumber}) => {\n  return (\n    <div>\n      <form onSubmit={handleNewPerson}>\n        <div>\n          name: <input value={newName} onChange={handleNewName} />\n        </div>\n        <div>\n          number: <input value={newNumber} onChange={handleNewNumber} />\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n    </div>\n  )\n}\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber] = useState('')\n  const [ filterData, setFilterData ] = useState('')\n  // const [ filteredPersons, setFilteredPersons ] = useState([])\n\n  const [ errorMsg, setErrorMsg ] = useState(null)\n  const [ alertMsg, setAlertMsg ] = useState(null)\n\n  useEffect(() => {\n    contactService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n  }, [])\n\n  const handleFilter = (event) => {\n    setFilterData(event.target.value);\n\n    // COMMENTS BELOW ARE KEPT FOR FUTURE REFERENCE FOR MYSELF\n    // filteredPersons has been removed as a state as it is unnecessary\n    //\n    // if you use filterData below for filtering, \n    // it creates some kind of weird dependency between states\n    // and filter doesn't work properly\n    // setFilteredPersons(persons.filter( person => person.name.toLowerCase().includes(event.target.value.toLowerCase())));\n  }\n\n  const handleNewName = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNewNumber = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleNewPerson = (event) => {\n    event.preventDefault();\n    const newPerson = {\n        name: newName,\n        number: newNumber,\n    }\n    // person already exists, just need to update\n    if (persons.findIndex(person => person.name === newName) !== -1) {\n        if (window.confirm(`${newName} is already in the phonebook, update number?`)) {\n          const updatePerson = persons.find(p => p.name === newPerson.name)\n          contactService\n            .update(updatePerson.id, newPerson)\n            .then(returnedPerson => {\n              setPersons(persons.map(p => p.id === returnedPerson.id ? returnedPerson : p))\n              // setFilteredPersons(filteredPersons.map(p => p.id === returnedPerson.id ? returnedPerson `: p))\n              notify(`${returnedPerson.name}'s number was changed to ${returnedPerson.number}`, 'alert')\n            })\n            .catch(err => {\n              console.log('error in update');\n              if (err.response) {\n                notify(err.response.data.error, 'error')\n              } else {\n                setPersons(persons.filter(p => p.id !== updatePerson.id))\n                // setFilteredPersons(filteredPersons.filter(p => p.id !== updatePerson.id))\n                notify(`${updatePerson.name} was already removed from the phonebook`, 'error')\n              }\n            })\n        }\n        return\n    }\n\n    // send to server\n    contactService\n      .create(newPerson)\n      .then(returnedPerson => {\n        console.log(returnedPerson);\n        setPersons(persons.concat(returnedPerson));\n        setNewName('');\n        setNewNumber('');\n        notify(`${returnedPerson.name} was added to the phonebook`, 'alert')\n      })\n      .catch(error => {\n        notify(error.response.data.error, 'error')\n      })\n  }\n\n  const handleRemovePerson = (person) => {\n    // event.preventDefault();\n    if (window.confirm(`Delete ${person.name} from phonebook?`)) {\n      const removePerson = persons.find(p => person.name === p.name)\n      contactService\n        .remove(removePerson.id)\n        .then(res => {\n          // console.log(res.status);\n          setPersons(persons.filter(p => removePerson.id !== p.id))\n          // setFilteredPersons(filteredPersons.filter(p => removePerson.id !== p.id))\n          notify(`${removePerson.name} was removed from the phonebook`, 'alert')\n        })\n        .catch(err => {\n          console.log('error caught in delete')\n          setPersons(persons.filter(p => p.id !== removePerson.id))\n          // setFilteredPersons(filteredPersons.filter(p => p.id !== removePerson.id))\n          notify(`${removePerson.name} was already removed from the phonebook`, 'error')\n        })\n    }\n  }\n\n  const notify = (msg, type) => {\n    if (type === 'alert') {\n      setAlertMsg(msg)\n      setTimeout(() => {\n        setAlertMsg(null)\n      }, 5000)\n    }\n\n    if (type === 'error') {\n      setErrorMsg(msg)\n      setTimeout(() => {\n        setErrorMsg(null)\n      }, 5000)\n    }\n  }\n\n  const personsToShow = filterData === '' ? persons : \n            persons.filter(person => person.name.toLowerCase().includes(filterData))\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={alertMsg} type={'alert'} />\n      <Notification message={errorMsg} type={'error'} />\n      <FilterData filter={filterData} handleFilter={handleFilter} />\n      <h2>Add new</h2>\n      <PersonForm newName={newName} newNumber={newNumber} \n        handleNewName={handleNewName} handleNewNumber={handleNewNumber}\n        handleNewPerson={handleNewPerson} />\n      <h2>Numbers</h2>\n      <PersonsData persons={personsToShow} removeEvent={handleRemovePerson} />\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n    <App />, document.getElementById('root')\n);\n\n"],"sourceRoot":""}